dir()
library(devtools)
library(devtool)
library(devtools)
fastx_reverse_complement
fastx_reverse_complement(dvcs)
dir()
library("phyloseq")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
a
library("phyloseq")
library("phyloseq")
library("phyloseq")
library("swirl")
install.packages("swirl")
library("swirl")
library('swirl')
library(swirl)
dir()
getwd('~/Desktop')
getwd('~/Desktop/')
if(!("BiocManager" %in% rownames(installed.packages()))) install.packages("BiocManager")
BiocManager::install("XGR", dependencies=T)
library(XGR)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.10")
if(!("BiocManager" %in% rownames(installed.packages()))) install.packages("BiocManager")
BiocManager::install("XGR", dependencies=T)
library(BiocManager)
BiocManager::install("XGR", dependencies=T)
BiocManager::install("XGR", dependencies=T)
setRepositories()
2
setRepositories()
setRepositories(2)
setRepositories(2)
setRepositories()
2
setRepositories()
dir
dir()
ap <- available.packages()
View(ap)
View(ap)
setRepositories(bios = getOption("BioC software"))
setRepositories(bios = getOption("BioC software")), ind = NULL
library(XGR)
if(!("BiocManager" %in% rownames(installed.packages()))) install.packages("BiocManager")
BiocManager::install("XGR", dependencies=T)
if(!("BiocManager" %in% rownames(installed.packages()))) install.packages("BiocManager")
C
if(!("BiocManager" %in% rownames(installed.packages()))) install.packages("BiocManager")
BiocManager::install("XGR", dependencies=T)
warnings()
if(!("BiocManager" %in% rownames(installed.packages()))) install.packages("BiocManager")
BiocManager::install("XGR", dependencies=T)
library (XGR)
if(!("BiocManager" %in% rownames(installed.packages()))) install.packages("BiocManager")
BiocManager::install("XGR", dependencies=T)
ap <- available.packages()
View(ap)
View(ap)
View(ap)
View(ap)
View(ap)
ap["XGR, "Depends"]
ap["XGR, "Depends"]
ap["XGR, "Depends"]\
ap["XGR, "Depends"]]
install.packages('XGR',repos='http://cran.us.r-project.org')
View(ap)
library(XGR)
xEnrichViewer
hdg
q()
q()
library(shiny)
setwd('~/Desktop/')
runApp("websiteV1/")
library(gprofiler2)
getwd()
nodes <- read.csv('websiteV1//data/N_count/nodes.csv')
nodes <- read.csv('websiteV1/data/N_count/nodes.csv')
genes <- unlist(nodes$label)
g_r <- gost(genes)
View(g_r)
View(nodes)
View(g_r)
View(g_r)
g_r <- gost(genes)
View(g_r)
View(g_r)
View(g_r)
runApp("websiteV1/")
View(g_r)
View(nodes)
genes <- unlist(nodes$label)
g_r <- gost(genes)
View(g_r)
gostplot(g_r)
?save_html()
save_html(g_r)
htmlwidgets::saveWidget(g_r)
htmlwidgets::saveWidget(g_r, "test.html")
htmlwidgets::saveWidget(gostplot(g_r), "test.html")
htmlwidgets::saveWidget(g_r, "p1.html", selfcontained = F, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "p1.html", selfcontained = F, libdir = "lib")
?renderUI
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
library(knitr)
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
htmlwidgets::saveWidget(g_r, "p1.html", selfcontained = F, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "p1.html", selfcontained = F, libdir = "lib")
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
?library(plotly)
library(plotly)
?renderPlotly()
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
setwd('~/Desktop/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
?knit
runApp('websiteV1/')
setwd('~/Desktop/websiteV1')
runApp('websiteV1/')
setwd()
setwd('~/Desktop/')
runApp('websiteV1/')
runApp('websiteV1/')
browseVignettes("widgetframe")
install.packages('widgetframe')
runApp('websiteV1/')
?markdown::markdownToHTML())
?markdown::markdownToHTML()
?markdown::markdownToHTML(text = "```{r}
htmltools::tags$iframe(
src = "new.html",
scrolling = "no",
seamless = "seamless",
frameBorder = "0",
width = "1000px",
height = "750px"
)
```")
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
?includeMarkdown
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
runApp('websiteV1/')
htmlwidgets::saveWidget(gostplot(g_r), "work.html", selfcontained = F, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "websiteV1/work.html", selfcontained = F, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "website.v1/work.html", selfcontained = F, libdir = "lib")
getwd()
htmlwidgets::saveWidget(gostplot(g_r), "website.v1/", selfcontained = F, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "website.v1", selfcontained = F, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "website.v1/work.html", selfcontained = F, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v1/work.html", selfcontained = F, libdir = "lib")
runApp('websiteV1/')
runApp("website.v1/")
htmltools::tags$iframe(
src = "work.html",
scrolling = "no",
seamless = "seamless",
frameBorder = "0",
width = "1000px",
height = "750px"
)
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
htmltools::tags$iframe(
src = "work.html",
scrolling = "no",
seamless = "seamless",
frameBorder = "0",
width = "1000px",
height = "750px"
)
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
?includeHTML
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
return(includeHTML("work.html")
)
return(includeHTML("website.v1/work.html"))
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
gostplot(g_r)
nodes <- read.csv('website.v1/data/CTP/nodes.csv')
genes <- unlist(nodes$name)
g_r <- gost(genes)
gostplot(g_r)
?partial_bundle
partial_bundle(g_r)
partial_bundle(gostplot(g_r))
renderCachedPlot(gostplot(g_r))
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
nodes <- read.csv('website.v1/data/N_count/nodes.csv')
genes <- unlist(nodes$name)
g_r <- gost(genes)
View(nodes)
runApp("website.v1/")
toWebGL()
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
library(parallel)
detectCores()
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
runApp("website.v1/")
htmlwidgets::saveWidget(gostplot(g_r), "website.v1/www/felix.html", selfcontained = F, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "website.v1/www/felix.html", selfcontained = F, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "website.v2/www/felix.html", selfcontained = F, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "website.v2/www/felix.html", selfcontained = T, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "website.v2/felix.html", selfcontained = T, libdir = "lib")
htmlwidgets::saveWidget(gostplot(g_r), "felix.html", selfcontained = T, libdir = NULL)
htmlwidgets::saveWidget(gostplot(g_r), "felix.html", selfcontained = T, libdir = "~/Desktop/website.v2/")
htmlwidgets::saveWidget(gostplot(g_r), "felix.html", selfcontained = F, libdir = "~/Desktop/website.v2/")
htmlwidgets::saveWidget(gostplot(g_r), "website.v2/felix.html", selfcontained = F, libdir = "~/Desktop/website.v2/")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/felix.html", selfcontained = F, libdir = "~/Desktop/website.v2/")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/lib/felix.html", selfcontained = F, libdir = "~/Desktop/website.v2/")
runApp("website.v2/")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/lib/felix.html", selfcontained = T, libdir = "~/Desktop/website.v2/")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/lib/felix.html", selfcontained = T, libdir = "~/Desktop/website.v2/lib")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/lib/felix.html", selfcontained = F, libdir = "~/Desktop/website.v2/lib")
runApp("website.v2/")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/lib/felix.html")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/lib/felix.html")
runApp("website.v2/")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/lib/felix.html")
runApp("website.v2/")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/lib/felix.html", selfcontained = F, libdir = "~/Desktop/website.v2/lib")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
?visSave
nodes <- read.csv('website.v2/data/N_count/nodes.csv')
edges <- read.csv('website.v2/data/N_count/edges.csv')
visNetwork(nodes = nodes, edges = edges,
background = "rgba(0, 0, 0, 0)") %>% visNodes(color = "green",font = list(color = "#000000")) %>% visEdges(color = "purple") %>% visLegend(enabled = TRUE)
g <-    visNetwork(nodes = nodes, edges = edges,
background = "rgba(0, 0, 0, 0)") %>% visNodes(color = "green",font = list(color = "#000000")) %>% visEdges(color = "purple") %>% visLegend(enabled = TRUE)
g
visSave(g, file = "website.v2/net", selfcontained = TRUE)
visSave(g, file = "website.v2/net", selfcontained = FALSE)
setwd("website.v2")
visSave(g, file = "net", selfcontained = FALSE)
setwd('~/Desktop/website.v2/')
setwd('..')
runApp("website.v2/")
setwd('website.v2/')
visSave(g, file = "net", selfcontained = TRUE)
visSave(g, file = "net", selfcontained = FALSE)
visSave(g, file = "net.html", selfcontained = FALSE)
setwd('..')
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v1/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/lib/felix.html", selfcontained = F, libdir = "~/Desktop/website.v2/lib")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/enrich.html", selfcontained = F, libdir = "~/Desktop/website.v2/enrich_files")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
setwd('website.v2/')
nodes <- read.csv('data/N_count/nodes.csv')
genes <- unlist(nodes$label)
g_r <- gost(genes)
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/NC_E.html", selfcontained = F,
libdir = "~/Desktop/website.v2/NC_E")
)
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/NC_E.html", selfcontained = F,libdir = "~/Desktop/website.v2/NC_E")
nodes <- read.csv('data/IL6/nodes.csv')
genes <- unlist(nodes$name)
g_r <- gost(genes)
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/IL6_E.html", selfcontained = F,
+                                  libdir = "~/Desktop/website.v2/IL6_E")
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/IL6_E.html", selfcontained = F,libdir = "~/Desktop/website.v2/IL6_E")
nodes <- read.csv('data/CRP/nodes.csv')
nodes <- read.csv('data/CRP/nodes.csv')
genes <- unlist(nodes$label)
g_r <- gost(genes)
genes <- unlist(nodes$name)
g_r <- gost(genes)
htmlwidgets::saveWidget(gostplot(g_r), "~/Desktop/website.v2/CRP_E.html", selfcontained = F,libdir = "~/Desktop/website.v2/CRP_E")
?addResourcePath
setwd('..')
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
?includeHTML
tags$iframe()
?tags$iframe()
tags$iframe(
src = "file:///Users/flixofarrell/Desktop/website.v2/NC_E.html",
height = "400",
scrolling = "no",
seamless = "seamless",
frameBorder = "0")
),
tags$iframe(
+   src = "file:///Users/flixofarrell/Desktop/website.v2/NC_E.html",
+   height = "400",
+   scrolling = "no",
+   seamless = "seamless",
+   frameBorder = "0")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
addResourcePath("html", "~/Desktop/website.v2/")
html
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
runApp("website.v2/")
setwd('website.v2/')
nodes <- read.csv('data/IL6/nodes.csv')
edges <- read.csv('data/IL6/edges.csv')
visNetwork(nodes = nodes, edges = edges,
background = "rgba(0, 0, 0, 0)") %>% visNodes(color = "green",font = list(color = "#000000")) %>% visEdges(color = "purple") %>% visLegend(enabled = TRUE)
?vis
?visNetwork
edges <- read.csv('data/IL6/edges.csv')
nodes <- read.csv('data/IL6/nodes.csv')
visNetwork(nodes = nodes, edges = edges,
background = "rgba(0, 0, 0, 0)") %>% visNodes(color = "green",font = list(color = "#000000")) %>% visEdges(color = "purple") %>% visLegend(enabled = TRUE)
View(g)
View(edges)
View(nodes)
